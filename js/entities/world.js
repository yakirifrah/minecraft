
class World {
    constructor() {
        this.matrix = this.createWorld();
        this.createMap = this.createMap;
    }
    createWorld() {
        let world = [
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().leaf, new Tree().leaf, new Tree().leaf, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().leaf, new Tree().leaf, new Tree().leaf, new Tree().leaf, new Tree().leaf, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().leaf, new Tree().leaf, new Tree().leaf, new Tree().leaf, new Tree().leaf, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().leaf, new Tree().leaf, new Tree().trunk, new Tree().leaf, new Tree().leaf, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().trunk, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().trunk, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().trunk, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone()],
            [new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Tree().trunk, new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Sky(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone(), new Stone()],
            [new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass(), new Grass()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
            [new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground(), new Ground()],
        ];
        return world;
    }
    // createMap() {
    //     let mainCon = $('#world');
    //     for (var i = 0; i < this.world.length; i++) {
    //         for (var j = 0; j < this.world[i].length; j++) {
    //             let block = $('<div/>');
    //             block.addClass(this.world[i][j].class)
    //                 .addClass('box')
    //                 .attr('data', this.world[i][j].data)
    //             mainCon.append(block);
    //         }
    //     }
    // }

}

